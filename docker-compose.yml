version: "3.9"
services:

  sales:
    build: sales/.
    container_name: sales
    entrypoint: ["/bin/bash", "-c", "python3 sales/app.py"]
    ports:
      - "5000:5000"
    volumes:
      - .:/app/
    environment:
      KAFKA_SERVER: 'kafka:9092'
      TOPIC_ORDERS: 'orders'
    depends_on:
      kafka:
        condition: service_healthy
  
  payment:
    build: payment-service/.
    container_name: payment
    entrypoint: ["go","run", "-tags", "musl",  "app.go"]
    volumes:
      - .:/app/
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_SERVER: 'kafka:9092'
      TOPIC_ORDERS: 'orders'
  
  inventory:
    build: inventory-service/.
    container_name: inventory
    entrypoint: ["go","run", "-tags", "musl",  "app.go"]
    volumes:
      - .:/app/
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_SERVER: 'kafka:9092'
      TOPIC_ORDERS: 'orders'

  ####### KAFKA #######
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data:Z
      - zookeeper-log:/var/lib/zookeeper/log:Z

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
    volumes:
      - kafka-data:/var/lib/kafka/data:Z
    healthcheck:
      test: ["CMD", "bash", "-c", "unset" , "JMX_PORT" ,";" ,"kafka-topics.sh","--zookeeper","zookeeper:2181","--list"]
      interval: 30s
      timeout: 10s
      retries: 4
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      kafka:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 200m
      
volumes:
  zookeeper-data:
    driver: local
  zookeeper-log:
    driver: local
  kafka-data:
    driver: local